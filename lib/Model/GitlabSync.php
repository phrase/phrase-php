<?php
/**
 * GitlabSync
 *
 * PHP version 5
 *
 * @category Class
 * @package  Phrase
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Phrase\Model;

use \ArrayAccess;
use \Phrase\ObjectSerializer;

/**
 * GitlabSync Class Doc Comment
 *
 * @category Class
 * @package  Phrase
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class GitlabSync implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'gitlab_sync';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'project_id' => 'string',
        'gitlab_project_id' => 'int',
        'gitlab_branch_name' => 'string',
        'auto_import' => 'bool',
        'auto_import_secret' => 'string',
        'auto_import_url' => 'string',
        'self_hosted_api_url' => 'string',
        'last_exported_at' => '\DateTime',
        'last_imported_at' => '\DateTime',
        'last_status' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'id' => null,
        'project_id' => null,
        'gitlab_project_id' => null,
        'gitlab_branch_name' => null,
        'auto_import' => null,
        'auto_import_secret' => null,
        'auto_import_url' => null,
        'self_hosted_api_url' => null,
        'last_exported_at' => 'date-time',
        'last_imported_at' => 'date-time',
        'last_status' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'project_id' => 'project_id',
        'gitlab_project_id' => 'gitlab_project_id',
        'gitlab_branch_name' => 'gitlab_branch_name',
        'auto_import' => 'auto_import',
        'auto_import_secret' => 'auto_import_secret',
        'auto_import_url' => 'auto_import_url',
        'self_hosted_api_url' => 'self_hosted_api_url',
        'last_exported_at' => 'last_exported_at',
        'last_imported_at' => 'last_imported_at',
        'last_status' => 'last_status'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'project_id' => 'setProjectId',
        'gitlab_project_id' => 'setGitlabProjectId',
        'gitlab_branch_name' => 'setGitlabBranchName',
        'auto_import' => 'setAutoImport',
        'auto_import_secret' => 'setAutoImportSecret',
        'auto_import_url' => 'setAutoImportUrl',
        'self_hosted_api_url' => 'setSelfHostedApiUrl',
        'last_exported_at' => 'setLastExportedAt',
        'last_imported_at' => 'setLastImportedAt',
        'last_status' => 'setLastStatus'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'project_id' => 'getProjectId',
        'gitlab_project_id' => 'getGitlabProjectId',
        'gitlab_branch_name' => 'getGitlabBranchName',
        'auto_import' => 'getAutoImport',
        'auto_import_secret' => 'getAutoImportSecret',
        'auto_import_url' => 'getAutoImportUrl',
        'self_hosted_api_url' => 'getSelfHostedApiUrl',
        'last_exported_at' => 'getLastExportedAt',
        'last_imported_at' => 'getLastImportedAt',
        'last_status' => 'getLastStatus'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['project_id'] = isset($data['project_id']) ? $data['project_id'] : null;
        $this->container['gitlab_project_id'] = isset($data['gitlab_project_id']) ? $data['gitlab_project_id'] : null;
        $this->container['gitlab_branch_name'] = isset($data['gitlab_branch_name']) ? $data['gitlab_branch_name'] : null;
        $this->container['auto_import'] = isset($data['auto_import']) ? $data['auto_import'] : null;
        $this->container['auto_import_secret'] = isset($data['auto_import_secret']) ? $data['auto_import_secret'] : null;
        $this->container['auto_import_url'] = isset($data['auto_import_url']) ? $data['auto_import_url'] : null;
        $this->container['self_hosted_api_url'] = isset($data['self_hosted_api_url']) ? $data['self_hosted_api_url'] : null;
        $this->container['last_exported_at'] = isset($data['last_exported_at']) ? $data['last_exported_at'] : null;
        $this->container['last_imported_at'] = isset($data['last_imported_at']) ? $data['last_imported_at'] : null;
        $this->container['last_status'] = isset($data['last_status']) ? $data['last_status'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets project_id
     *
     * @return string|null
     */
    public function getProjectId()
    {
        return $this->container['project_id'];
    }

    /**
     * Sets project_id
     *
     * @param string|null $project_id project_id
     *
     * @return $this
     */
    public function setProjectId($project_id)
    {
        $this->container['project_id'] = $project_id;

        return $this;
    }

    /**
     * Gets gitlab_project_id
     *
     * @return int|null
     */
    public function getGitlabProjectId()
    {
        return $this->container['gitlab_project_id'];
    }

    /**
     * Sets gitlab_project_id
     *
     * @param int|null $gitlab_project_id gitlab_project_id
     *
     * @return $this
     */
    public function setGitlabProjectId($gitlab_project_id)
    {
        $this->container['gitlab_project_id'] = $gitlab_project_id;

        return $this;
    }

    /**
     * Gets gitlab_branch_name
     *
     * @return string|null
     */
    public function getGitlabBranchName()
    {
        return $this->container['gitlab_branch_name'];
    }

    /**
     * Sets gitlab_branch_name
     *
     * @param string|null $gitlab_branch_name gitlab_branch_name
     *
     * @return $this
     */
    public function setGitlabBranchName($gitlab_branch_name)
    {
        $this->container['gitlab_branch_name'] = $gitlab_branch_name;

        return $this;
    }

    /**
     * Gets auto_import
     *
     * @return bool|null
     */
    public function getAutoImport()
    {
        return $this->container['auto_import'];
    }

    /**
     * Sets auto_import
     *
     * @param bool|null $auto_import auto_import
     *
     * @return $this
     */
    public function setAutoImport($auto_import)
    {
        $this->container['auto_import'] = $auto_import;

        return $this;
    }

    /**
     * Gets auto_import_secret
     *
     * @return string|null
     */
    public function getAutoImportSecret()
    {
        return $this->container['auto_import_secret'];
    }

    /**
     * Sets auto_import_secret
     *
     * @param string|null $auto_import_secret auto_import_secret
     *
     * @return $this
     */
    public function setAutoImportSecret($auto_import_secret)
    {
        $this->container['auto_import_secret'] = $auto_import_secret;

        return $this;
    }

    /**
     * Gets auto_import_url
     *
     * @return string|null
     */
    public function getAutoImportUrl()
    {
        return $this->container['auto_import_url'];
    }

    /**
     * Sets auto_import_url
     *
     * @param string|null $auto_import_url auto_import_url
     *
     * @return $this
     */
    public function setAutoImportUrl($auto_import_url)
    {
        $this->container['auto_import_url'] = $auto_import_url;

        return $this;
    }

    /**
     * Gets self_hosted_api_url
     *
     * @return string|null
     */
    public function getSelfHostedApiUrl()
    {
        return $this->container['self_hosted_api_url'];
    }

    /**
     * Sets self_hosted_api_url
     *
     * @param string|null $self_hosted_api_url self_hosted_api_url
     *
     * @return $this
     */
    public function setSelfHostedApiUrl($self_hosted_api_url)
    {
        $this->container['self_hosted_api_url'] = $self_hosted_api_url;

        return $this;
    }

    /**
     * Gets last_exported_at
     *
     * @return \DateTime|null
     */
    public function getLastExportedAt()
    {
        return $this->container['last_exported_at'];
    }

    /**
     * Sets last_exported_at
     *
     * @param \DateTime|null $last_exported_at last_exported_at
     *
     * @return $this
     */
    public function setLastExportedAt($last_exported_at)
    {
        $this->container['last_exported_at'] = $last_exported_at;

        return $this;
    }

    /**
     * Gets last_imported_at
     *
     * @return \DateTime|null
     */
    public function getLastImportedAt()
    {
        return $this->container['last_imported_at'];
    }

    /**
     * Sets last_imported_at
     *
     * @param \DateTime|null $last_imported_at last_imported_at
     *
     * @return $this
     */
    public function setLastImportedAt($last_imported_at)
    {
        $this->container['last_imported_at'] = $last_imported_at;

        return $this;
    }

    /**
     * Gets last_status
     *
     * @return string|null
     */
    public function getLastStatus()
    {
        return $this->container['last_status'];
    }

    /**
     * Sets last_status
     *
     * @param string|null $last_status last_status
     *
     * @return $this
     */
    public function setLastStatus($last_status)
    {
        $this->container['last_status'] = $last_status;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


